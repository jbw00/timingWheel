#eureka client 配置
eureka:
  client:
    serviceUrl:
      defaultZone: http://localhost:8199/eureka/

spring:
  datasource:
    url: jdbc:mysql://localhost:3306/localhost?useUnicode=true&characterEncoding=UTF-8&allowMultiQueries=true
    username: localhost
    password: localhost
  redis:
    cache:
      expiration: 120
    database: 0
    host: localhost
    pool:
      max-active: 8
      max-idle: 8
      max-wait: -1
      min-idle: 0
    port: 6379
    session:
      expire: 1800
  #事件轮配置
  timing:
    #锁时长
    lockTimeOut: 43200000
    #指针跳动频率
    pointerStep: 60000
  kafka:
    topic:
      msg-delay: msg-delay-test
      message: message-test
      sms: sms-test
    bootstrap-servers: localhost
    #生产者的配置，大部分我们可以使用默认的，这里列出几个比较重要的属性
    producer:
      #每批次发送消息的数量
      batch-size: 16
      #设置大于0的值将使客户端重新发送任何数据，一旦这些数据发送失败。注意，这些重试与客户端接收到发送错误时的重试没有什么不同。允许重试将潜在的改变数据的顺序，如果这两个消息记录都是发送到同一个partition，则第一个消息失败第二个发送成功，则第二条消息会比第一条消息出现要早。
      retries: 0
      #producer可以用来缓存数据的内存大小。如果数据产生速度大于向broker发送的速度，producer会阻塞或者抛出异常，以“block.on.buffer.full”来表明。这项设置将和producer能够使用的总内存相关，但并不是一个硬性的限制，因为不是producer使用的所有内存都是用于缓存。一些额外的内存会用于压缩（如果引入压缩机制），同样还有一些用于维护请求。
      buffer-memory: 33554432
      #key序列化方式
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      #value序列化方式
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    #消费者的配置
    consumer:
      #Kafka中没有初始偏移或如果当前偏移在服务器上不再存在时,默认取最新 ，有三个选项 【latest, earliest, none】
      auto-offset-reset: earliest
      #手动提交偏移
      enable-auto-commit: false
      #自动提交的时间间隔
      auto-commit-interval: 100
      #key的解码方式
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      #value的解码方式
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      group-id: test
